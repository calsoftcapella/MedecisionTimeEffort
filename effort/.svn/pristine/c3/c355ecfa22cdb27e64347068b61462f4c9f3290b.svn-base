package com.calsoft.report.service;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import com.calsoft.report.dao.ReportDAO;
import com.calsoft.report.dao.ReportDaoFactory;
import com.calsoft.report.form.ReportForm;
import com.calsoft.report.model.Report;
import com.calsoft.user.form.UserForm;
import com.calsoft.user.model.User;
public class ReportServiceImpl implements ReportService{
	/*
	 * (non-Javadoc)
	 * @see com.calsoft.report.service.ReportService#getReportData(java.lang.String, java.lang.String, java.lang.String[])
	 */
	@Override
	public List<ReportForm> getReportData(String year, String month,String[] allocatedResource ) throws Exception
	{
		// TODO Auto-generated method stub
		List<ReportForm> reportFormList=new ArrayList<ReportForm>();
		ReportDAO reportDao=ReportDaoFactory.getReportDao();
		List<Report> reportList=reportDao.getReportData(year, month,allocatedResource);
		Iterator<Report> itr=reportList.iterator();
		while(itr.hasNext())
		{
			Report report=itr.next();
			ReportForm reportform=populateReportForm(report);			
			reportFormList.add(reportform);
		}
		return reportFormList;
	}


	public ReportForm populateReportForm(Report report)
	{
		ReportForm reportForm=new ReportForm();
		reportForm.setUserName(report.getUserName());
		reportForm.setTime1(report.getTime1());
		reportForm.setTime2(report.getTime2());
		reportForm.setTime3(report.getTime3());
		reportForm.setTime4(report.getTime4());
		reportForm.setTime5(report.getTime5());
		reportForm.setTime6(report.getTime6());
		reportForm.setTime7(report.getTime7());
		reportForm.setTime8(report.getTime8());
		reportForm.setTime9(report.getTime9());
		reportForm.setTime10(report.getTime10());
		reportForm.setTime11(report.getTime11());
		reportForm.setTime12(report.getTime12());
		reportForm.setTime13(report.getTime13());
		reportForm.setTime14(report.getTime14());
		reportForm.setTime15(report.getTime15());
		reportForm.setTime16(report.getTime16());
		reportForm.setTime17(report.getTime17());
		reportForm.setTime18(report.getTime18());
		reportForm.setTime19(report.getTime19());
		reportForm.setTime20(report.getTime20());
		reportForm.setTime21(report.getTime21());
		reportForm.setTime22(report.getTime22());
		reportForm.setTime23(report.getTime23());
		reportForm.setTime24(report.getTime24());
		reportForm.setTime25(report.getTime25());
		reportForm.setTime26(report.getTime26());
		reportForm.setTime27(report.getTime27());
		reportForm.setTime28(report.getTime28());
		reportForm.setTime29(report.getTime29());
		reportForm.setTime30(report.getTime30());
		reportForm.setTime31(report.getTime31());
		reportForm.setStatus(report.getStatus());
		reportForm.setTotalTime(report.getTotalTime());

		return reportForm;
	}


	@Override
	public List<List<Report>> getUserReportAllocation(int userId)throws Exception {
		// TODO Auto-generated method stub
		List<List<Report>> combinedReportList=new ArrayList<List<Report>>();
		ReportDAO reportDao=ReportDaoFactory.getReportDao();
		combinedReportList=reportDao.getUserReportAllocation(userId);
		return combinedReportList;
	}

	@Override
	public void addResources(String[] allocatedResource,int userId)throws Exception {
		// TODO Auto-generated method stub

		ReportDAO reportDao=ReportDaoFactory.getReportDao();
		reportDao.addResources(allocatedResource,userId);

	}


	@Override
	public void deleteResources(String[] allocatedResource, int userId) throws Exception{

		ReportDAO reportDao=ReportDaoFactory.getReportDao();
		reportDao.deleteResources(allocatedResource,userId);					

	}
	@Override
	public List<List<Report>> getUserReportAllocation() throws Exception {
		List<List<Report>> combinedReportList=new ArrayList<List<Report>>();
		ReportDAO reportDao=ReportDaoFactory.getReportDao();
		combinedReportList=reportDao.getUserReportAllocation();
		return combinedReportList;
	}


	@Override
	public List<ReportForm> getReportDataTeamWise(String year, String month, String[] detailedTeam) throws Exception {
		// TODO Auto-generated method stub
		List<ReportForm> reportFormList=new ArrayList<ReportForm>();
		ReportDAO reportDao=ReportDaoFactory.getReportDao();
		List<Report> reportList=reportDao.getReportDataTeamWise(year, month, detailedTeam);
		Iterator<Report> itr=reportList.iterator();
		while(itr.hasNext()){
			Report report=itr.next();
			ReportForm reportform=populateReportForm(report);			
			reportFormList.add(reportform);
		}
		return reportFormList;
	}


	@Override
	public List<ReportForm> getExceptionDashboard(String year, String month, List<UserForm> allocatedUserList) throws Exception {
		//Method for Account Manager Role Exception Dashboard
		List<ReportForm> reportFormList=new ArrayList<ReportForm>();
		ReportDAO reportDao=ReportDaoFactory.getReportDao();		
		List<User> modelUser = new ArrayList<User>();
		for(UserForm u_form : allocatedUserList){
			User u1 = null;
			u1 = getUserFromForm(u_form);
			modelUser.add(u1);
		}		
		List<Report> reportList=reportDao.getExceptionDashboard(year, month,modelUser);
		Iterator<Report> itr=reportList.iterator();
		while(itr.hasNext())
		{
			Report report=itr.next();
			ReportForm reportform=populateReportForm(report);			
			reportFormList.add(reportform);
		}
		return reportFormList;
	}
	private User getUserFromForm(UserForm u_form) {
		// Getting User from Form
		User u1 = new User();
		u1.setUser_Id(u_form.getUserId());
		return u1;
	}

/*
	@Override
	public String saveWeeklyStatus(WeeklyForm form, int userId,String startDate, String endDate, List<Deliverables> deliv,List<Constraints> constr, List<Recruitment_status> recrut)
			throws Exception {
		// TODO Auto-generated method stub
		String message = null;
		UserEvent userEvent = populateWeeklyForm(form, userId,startDate,endDate, deliv, constr,recrut); 
		ReportDAO reportDao=ReportDaoFactory.getReportDao();
		message = reportDao.saveWeeklyStatus(userEvent);
		return message;
	}


	private UserEvent populateWeeklyForm(WeeklyForm form, int userId,String startDate, String endDate, List<Deliverables> deliv,
			List<Constraints> constr, List<Recruitment_status> recrut) {
		// TODO Auto-generated method stub

		User user = new User();
		user.setUser_Id(userId);
		UserEvent userEvent = new UserEvent();
		userEvent.setUser(user);
		userEvent.setStart_date(startDate);
		userEvent.setEnd_date(endDate);
		if(form!=null){
			userEvent.setStatus_date(form.getStatusDate());
			userEvent.setEvent_info(form.getEventInfo());
			userEvent.setAchieve(form.getAchievements());
		}
		Set<EventMile> setMile = new HashSet<EventMile>();		
		Set<EventConst> setCont = new HashSet<EventConst>();		
		Set<EventRole> setRole = new HashSet<EventRole>();

		if(!(deliv==null && constr==null && recrut==null)){
			for (Deliverables  d1: deliv) {
				EventMile eMile = new EventMile();
				eMile.setUser(user);
				eMile.setUserEvent(userEvent);
				eMile.setDetail_mile(d1.getDetails_miles());
				eMile.setOwner_mile(d1.getOwner_mile());
				eMile.setRemark_mile(d1.getRemark_mile());
				setMile.add(eMile);		
			}		
			for (Constraints  c1: constr) {			
				EventConst eConst = new EventConst();
				eConst.setUser(user);
				eConst.setUserEvent(userEvent);
				eConst.setOndate_const(c1.getOnDate_const());
				eConst.setDetail_const(c1.getDetail_const());
				eConst.setOwner_const(c1.getOwner_const());
				eConst.setRemark_const(c1.getRemark_const());
				eConst.setEta_const(c1.getEta_const());
				setCont.add(eConst);		
			}

			for (Recruitment_status  r1: recrut) {		
				EventRole eRole = new EventRole();
				eRole.setUser(user);
				eRole.setUserEvent(userEvent);
				eRole.setRole_evnt(r1.getRole_status());
				eRole.setStartpos(r1.getPosition());
				eRole.setInternal_view(r1.getInternalInter());
				eRole.setApollo_view(r1.getApolloInter());
				eRole.setSelected_of(r1.getSelectedOff());
				eRole.setJoined(r1.getJoined());
				setRole.add(eRole);
			}
		}		
		userEvent.setEventMile(setMile);
		userEvent.setEventConst(setCont);
		userEvent.setEventRole(setRole);
		return userEvent;
	}


	@Override
	public WeeklyForm getEditableWeeklyForm(String startDate, String endDate,int userId) throws Exception {
		// TODO Auto-generated method stub
		WeeklyForm weeklyForm = new WeeklyForm();
		UserEvent userEvent = populateWeeklyForm(null,userId,startDate,endDate,null,null,null);
		ReportDAO reportDao=ReportDaoFactory.getReportDao();
		userEvent = reportDao.getEditableWeeklyForm(userEvent);
		weeklyForm = populateaUserEventToWeeklyForm(userEvent);
		return weeklyForm;
	}


	private WeeklyForm populateaUserEventToWeeklyForm(UserEvent userEvent) {
		// TODO Auto-generated method stub
		WeeklyForm weeklyForm = new WeeklyForm();
		if(userEvent!=null)
		{
			weeklyForm.setEvent_id(userEvent.getId());
			weeklyForm.setStatusDate(userEvent.getStatus_date());
			weeklyForm.setEventInfo(userEvent.getEvent_info());
			weeklyForm.setAchievements(userEvent.getAchieve());
			Set<EventMile> eventMile = userEvent.getEventMile();
			Set<Deliverables> setDeliv = new HashSet<Deliverables>();
			for (EventMile eventMile2 : eventMile) {
				Deliverables d1 = new Deliverables();
				d1.setDetails_miles(eventMile2.getDetail_mile());
				d1.setOwner_mile(eventMile2.getOwner_mile());
				d1.setRemark_mile(eventMile2.getRemark_mile());
				setDeliv.add(d1);
			}			
			weeklyForm.setDeliList(setDeliv);
			
			Set<EventConst> eventCont = userEvent.getEventConst();
			Set<Constraints> setConst = new HashSet<Constraints>();
			for (EventConst eventConst2 : eventCont) {
				Constraints  c1 = new Constraints();
				c1.setOnDate_const(eventConst2.getOndate_const());
				c1.setDetail_const(eventConst2.getDetail_const());
				c1.setOwner_const(eventConst2.getOwner_const());
				c1.setRemark_const(eventConst2.getRemark_const());
				c1.setEta_const(eventConst2.getEta_const());
				setConst.add(c1);
			}
			weeklyForm.setConstList(setConst);
			
			Set<EventRole> eventRole = userEvent.getEventRole();
			Set<Recruitment_status> setRecrt = new HashSet<Recruitment_status>();
			for (EventRole eventRole2 : eventRole) {
				Recruitment_status r1 = new Recruitment_status();
				r1.setRole_status(eventRole2.getRole_evnt());
				r1.setPosition(eventRole2.getStartpos());
				r1.setInternalInter(eventRole2.getInternal_view());
				r1.setApolloInter(eventRole2.getApollo_view());
				r1.setSelectedOff(eventRole2.getSelected_of());
				r1.setJoined(eventRole2.getJoined());
				setRecrt.add(r1);
			}
			weeklyForm.setRecrList(setRecrt);											
		}
		
		return weeklyForm;
	}*/
}
